>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

>>> print(bg.area())
Traceback (most recent call last):
...
Exception: area() is not implemented

# integer integer

>>> bg = BaseGeometry()
>>> bg.integer_validator(12, 12)


# string integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("width", 89)

#string string

>>> bg = BaseGeometry()
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
        ...
TypeError: name must be an integer


# string

>>> bg = BaseGeometry()
>>> bg.integer_validator("name")
Traceback (most recent call last):
        ...
TypeError: integer_validator() missing 1 required positional argument: 'value'

#negative

#float

>>> bg.integer_validator("mi", 7.342)
Traceback (most recent call last):
        ...
TypeError: mi must be an integer

>>> bg.integer_validator("one", )
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("hey", "hey")
Traceback (most recent call last):
...
TypeError: hey must be an integer
>>> bg.integer_validator("hey", None)
Traceback (most recent call last):
...
TypeError: hey must be an integer
>>> bg.integer_validator("hey", 3.9)
Traceback (most recent call last):
...
TypeError: hey must be an integer
>>> bg.integer_validator("hey", [1, 2])
Traceback (most recent call last):
...
TypeError: hey must be an integer
>>> bg.integer_validator("hey", (1, 3))
Traceback (most recent call last):
...
TypeError: hey must be an integer
>>> bg.integer_validator("hey", {3, 45})
Traceback (most recent call last):
...
TypeError: hey must be an integer
>>> bg.integer_validator("hey", True)
Traceback (most recent call last):
...
TypeError: hey must be an integer

