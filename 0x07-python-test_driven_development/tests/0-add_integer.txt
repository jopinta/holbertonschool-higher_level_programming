      >>> add_integer = __import__('0-add_integer').add_integer

# Documentation
===========================

	>>> module_doc = __import__("0-add_integer").__doc__
	>>> print(len(module_doc) > 0)
	True

	>>> func_doc = __import__("0-add_integer").add_integer.__doc__
	>>> print(len(func_doc) > 0)
	True


# to add integers or float:

# ===========test values========

# integers addition
>>> add_integer (1, 2)
3
>>> add_integer(1, -2)
-1

# floats additions

>>> add_integer(1.4, -2)
-1

# mixed addition


>>> add_integer(2)
100

>>> add_integer(2147483647, 0)
2147483647

# ====test non integer values=====

# a is string plus integer
>>> add_integer("hello", 40)
Traceback (most recent call last):
        ...
TypeError: a must be an integer
>>> add_integer(4, "School")
Traceback (most recent call last):
        ...
TypeError: b must be an integer

# b is string plus integer
>>> add_integer(1, "betty")
Traceback (most recent call last):
        ...
TypeError: b must be an integer

# list type parameters
>>> add_integer([2,4,6], 8)
Traceback (most recent call last):
        ...
TypeError: a must be an integer

# passing no args
>>> add_integer(None)
Traceback (most recent call last):
        ...
TypeError: a must be an integer


>>> add_integer(float("Nan"))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

# ==========================================
